plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'it.pintux'
version = '1.6.0'

repositories {
    mavenCentral()
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://repo.opencollab.dev/main/" }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    implementation project(':common')
    compileOnly("io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT")
    compileOnly('org.geysermc.floodgate:api:2.2.3-SNAPSHOT')
    compileOnly 'me.clip:placeholderapi:2.11.6'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
            srcDirs += project(':common').sourceSets.main.resources.srcDirs
        }
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'

    from(project(':common').sourceSets.main.resources)

    filesMatching('plugin.yml') {
        expand props
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


shadowJar {
    minimize()
    archiveClassifier.set('')
    archiveBaseName.set('BedrockGUI-Paper')
    //destinationDirectory.set(file("${System.getProperty('user.home')}/Desktop"))
}